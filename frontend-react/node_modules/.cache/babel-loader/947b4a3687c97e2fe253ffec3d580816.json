{"ast":null,"code":"var _jsxFileName = \"/home/yijing/Documents/react-study/frontend-react/src/components/Upload.tsx\";\nimport * as React from 'react';\nimport axios from 'axios';\nimport './Upload.scss';\nexport const ImageExtends = ['png', 'img', 'gif', 'bmp', 'svg', 'webp'];\n\nconst Upload = props => {\n  let [urls, setUrls] = React.useState([]);\n  let [files, setFiles] = React.useState([]);\n  let [progress, setProgress] = React.useState(0.0);\n  const config = {\n    onUploadProgress(progress) {\n      if (progress.lengthComputable) {\n        let percent = progress.loaded / progress.total * 100;\n        setProgress(percent);\n      }\n    }\n\n  };\n\n  const changeFiles = e => {\n    console.info(e.currentTarget.files);\n\n    if (e.currentTarget.files && e.currentTarget.files.length > 0) {\n      let filelist = [];\n\n      for (let i = 0; i < e.currentTarget.files.length; i++) {\n        let extend = e.currentTarget.files[i].name.substring(e.currentTarget.files[i].name.lastIndexOf('.') + 1);\n        let item = {\n          name: e.currentTarget.files[i].name,\n          size: e.currentTarget.files[i].size,\n          type: extend,\n          canPreview: ImageExtends.includes(extend),\n          src: '',\n          progress: 0,\n          content: e.currentTarget.files[i],\n          loaded: false,\n          index: i\n        };\n\n        if (ImageExtends.includes(extend)) {\n          let reader = new FileReader();\n          reader.readAsDataURL(e.currentTarget.files[i]);\n\n          reader.onload = () => {\n            console.info('load');\n            item.src = reader.result;\n          };\n        }\n\n        filelist.push(item);\n      }\n\n      setFiles(filelist);\n    }\n  };\n\n  const uploadFile = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    const dom = document.getElementById('file');\n    const files = dom.files;\n\n    if (files.length == 0) {\n      return;\n    }\n\n    for (let key = 0; key < files.length; key++) {\n      formData.append(`file[]`, files[key]);\n    }\n\n    axios.post(`http://192.168.45.121:5000/upload`, formData, config).then(res => {\n      if (res.data.status === 'success') {\n        setUrls(res.data.url);\n        dom.outerHTML = dom.outerHTML; // setFiles([])\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    action: \"http://192.168.45.121:5000/upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    multiple: true,\n    onChange: changeFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), files.map(file => {\n    if (file.canPreview) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: file.src,\n        key: file.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ext\",\n        key: file.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }, file.type);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: uploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Upload\")), progress > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, progress.toFixed(0), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-mask\",\n    style: {\n      width: 100 - progress + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), progress == 100 && urls && urls.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, urls.map(url => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: url,\n      style: {\n        color: \"#2486b9\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 41\n      }\n    }, url));\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/yijing/Documents/react-study/frontend-react/src/components/Upload.tsx"],"names":["React","axios","ImageExtends","Upload","props","urls","setUrls","useState","files","setFiles","progress","setProgress","config","onUploadProgress","lengthComputable","percent","loaded","total","changeFiles","e","console","info","currentTarget","length","filelist","i","extend","name","substring","lastIndexOf","item","size","type","canPreview","includes","src","content","index","reader","FileReader","readAsDataURL","onload","result","push","uploadFile","preventDefault","formData","FormData","dom","document","getElementById","key","append","post","then","res","data","status","url","outerHTML","map","file","toFixed","width","color","textDecoration"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport './Upload.scss'\n\nexport type uploadFiles = {\n    filename: string,\n    size: number,\n}\n\ninterface IUpload {\n    handler?: (file: File) => void;\n    path?: string;\n    files?: uploadFiles[];\n}\n\ninterface IFile{\n    name:string,\n    size:number,\n    type:string,\n    canPreview:boolean,\n    progress:number\n}\n\nexport const ImageExtends = ['png' , 'img' , 'gif' , 'bmp' , 'svg' , 'webp' ]\n\nconst Upload:React.FC<IUpload> = (props)=>{\n    let [urls,setUrls] = React.useState([])\n    let [files,setFiles]:any = React.useState([])\n    let [progress,setProgress] = React.useState(0.0)\n    const config = {\n        onUploadProgress(progress:ProgressEvent){\n            if(progress.lengthComputable){\n                let percent:number = progress.loaded / progress.total*100\n                setProgress(percent)\n            }\n        }\n    }\n\n    const changeFiles = (e:React.FormEvent<HTMLInputElement>)=>{\n        console.info(e.currentTarget.files)\n        if(e.currentTarget.files && e.currentTarget.files.length>0){\n            let filelist:Array<any> = []\n            for(let i=0;i<e.currentTarget.files.length;i++){\n                let extend = e.currentTarget.files[i].name.substring(e.currentTarget.files[i].name.lastIndexOf('.')+1)\n                let item = {\n                    name:e.currentTarget.files[i].name,\n                    size:e.currentTarget.files[i].size,\n                    type:extend,\n                    canPreview:ImageExtends.includes(extend),\n                    src:'',\n                    progress:0,\n                    content:e.currentTarget.files[i],\n                    loaded:false,\n                    index:i\n                }\n                if(ImageExtends.includes(extend)){\n                    let reader = new FileReader()\n                    reader.readAsDataURL(e.currentTarget.files[i])\n                    reader.onload = ()=>{\n                        console.info('load')\n                        item.src = reader.result as string\n                    }\n                }\n                filelist.push(item)\n            }\n            setFiles(filelist)\n        }\n    }\n\n    const uploadFile = (e:any)=>{\n        e.preventDefault();\n        let formData = new FormData()\n        const dom = document.getElementById('file') as HTMLInputElement \n        const files = dom.files as FileList\n        if(files.length==0){\n            return \n        }\n        for(let key = 0;key<files.length;key++){\n            formData.append(`file[]`,files[key])\n        }\n        axios.post(`http://192.168.45.121:5000/upload`,formData,config).then(res=>{\n            if(res.data.status==='success'){\n                setUrls(res.data.url)\n                dom.outerHTML = dom.outerHTML\n                // setFiles([])\n            }\n        })\n    }\n    return (\n        <>\n            <form method='post' action='http://192.168.45.121:5000/upload' >\n                <div>\n                    <input type=\"file\" id='file' multiple onChange={changeFiles}/>\n                </div>\n                {\n                    files.map((file)=>{\n                        if(file.canPreview){\n                            return (\n                                <img src={file.src} key={file.index}/>\n                            )\n                        }else{\n                            return (\n                                <div className='ext' key={file.index}>{file.type}</div>\n                            )\n                        }\n                    })\n                }\n                <div>\n                    <button type='submit' onClick={uploadFile} >Upload</button>\n                </div>\n                {\n                    progress>0?\n                    (\n                        <>\n                            <div className='progress-wrap'>\n                                <div className='progress-num'>{progress.toFixed(0)}%</div>\n                                <div className='progress-bar'></div>\n                                <div className='progress-mask' style={{width:(100-progress)+'%'}}></div>\n                            </div>\n                        </>\n                    ) :<></>\n                }\n                {\n                    progress==100 && urls && urls.length>0?\n                    (\n                        <ul>\n                            {\n                                urls.map(url=>{\n                                    return <li key={url}>\n                                        <a href={url} style={{color:\"#2486b9\",textDecoration:\"none\"}}>\n                                            { url }\n                                        </a>\n                                    </li>\n                                })\n                            }\n                        </ul>\n                    ):\n                    (\n                        <></>\n                    )\n                }\n            </form>\n        </>\n    )\n}\n\nexport default Upload\n\n\n"]},"metadata":{},"sourceType":"module"}