{"ast":null,"code":"var _jsxFileName = \"/home/yijing/Documents/react-study/frontend-react/src/components/Upload.tsx\";\nimport * as React from 'react';\nimport axios from 'axios';\nimport './Upload.scss';\n\nconst Upload = props => {\n  let [urls, setUrls] = React.useState([]);\n  let [files, setFiles] = React.useState([]);\n  let [progress, setProgress] = React.useState(0.0);\n  const config = {\n    onUploadProgress(progress) {\n      if (progress.lengthComputable) {\n        let percent = progress.loaded / progress.total * 100;\n        setProgress(percent);\n      }\n    }\n\n  };\n\n  const changeFiles = e => {\n    console.info(e.currentTarget.value);\n  };\n\n  const uploadFile = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    const dom = document.getElementById('file');\n    const files = dom.files;\n\n    if (files.length == 0) {\n      return;\n    }\n\n    for (let key = 0; key < files.length; key++) {\n      formData.append(`file[]`, files[key]);\n    }\n\n    axios.post(`http://192.168.45.121:5000/upload`, formData, config).then(res => {\n      if (res.data.status === 'success') {\n        setUrls(res.data.url);\n        dom.outerHTML = dom.outerHTML;\n        setFiles([]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    action: \"http://192.168.45.121:5000/upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    multiple: true,\n    onChange: changeFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: uploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Upload\")), progress > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, progress.toFixed(0), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-mask\",\n    style: {\n      width: 100 - progress + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), progress == 100 && urls && urls.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, urls.map(url => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: url,\n      style: {\n        color: \"#2486b9\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, url));\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/yijing/Documents/react-study/frontend-react/src/components/Upload.tsx"],"names":["React","axios","Upload","props","urls","setUrls","useState","files","setFiles","progress","setProgress","config","onUploadProgress","lengthComputable","percent","loaded","total","changeFiles","e","console","info","currentTarget","value","uploadFile","preventDefault","formData","FormData","dom","document","getElementById","length","key","append","post","then","res","data","status","url","outerHTML","toFixed","width","map","color","textDecoration"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport './Upload.scss'\n\nexport type uploadFiles = {\n    filename: string,\n    size: number,\n}\n\ninterface IUpload {\n    handler?: (file: File) => void;\n    path?: string;\n    files?: uploadFiles[];\n}\n\nexport type ImageExtends = 'png' | 'img' | 'gif' | 'bmp' | 'svg' | 'webp' \n\nconst Upload:React.FC<IUpload> = (props)=>{\n    let [urls,setUrls] = React.useState([])\n    let [files,setFiles] = React.useState([])\n    let [progress,setProgress] = React.useState(0.0)\n    const config = {\n        onUploadProgress(progress:ProgressEvent){\n            if(progress.lengthComputable){\n                let percent:number = progress.loaded / progress.total*100\n                setProgress(percent)\n            }\n        }\n    }\n\n    const changeFiles = (e:React.FormEvent<HTMLInputElement>)=>{\n        console.info(e.currentTarget.value)\n    }\n\n    const uploadFile = (e:any)=>{\n        e.preventDefault();\n        let formData = new FormData()\n        const dom = document.getElementById('file') as HTMLInputElement \n        const files = dom.files as FileList\n        if(files.length==0){\n            return \n        }\n        for(let key = 0;key<files.length;key++){\n            formData.append(`file[]`,files[key])\n        }\n        axios.post(`http://192.168.45.121:5000/upload`,formData,config).then(res=>{\n            if(res.data.status==='success'){\n                setUrls(res.data.url)\n                dom.outerHTML = dom.outerHTML\n                setFiles([])\n            }\n        })\n    }\n    return (\n        <>\n            <form method='post' action='http://192.168.45.121:5000/upload' >\n                <div>\n                    <input type=\"file\" id='file' multiple onChange={changeFiles}/>\n                </div>\n                <div>\n                    <button type='submit' onClick={uploadFile} >Upload</button>\n                </div>\n\n                {\n                    progress>0?\n                    (\n                        <>\n                            <div className='progress-wrap'>\n                                <div className='progress-num'>{progress.toFixed(0)}%</div>\n                                <div className='progress-bar'></div>\n                                <div className='progress-mask' style={{width:(100-progress)+'%'}}></div>\n                            </div>\n                        </>\n                    ) :<></>\n                }\n                {\n                    progress==100 && urls && urls.length>0?\n                    (\n                        <ul>\n                            {\n                                urls.map(url=>{\n                                    return <li key={url}>\n                                        <a href={url} style={{color:\"#2486b9\",textDecoration:\"none\"}}>\n                                            { url }\n                                        </a>\n                                    </li>\n                                })\n                            }\n                        </ul>\n                    ):\n                    (\n                        <></>\n                    )\n                }\n            </form>\n        </>\n    )\n}\n\nexport default Upload\n\n\n"]},"metadata":{},"sourceType":"module"}