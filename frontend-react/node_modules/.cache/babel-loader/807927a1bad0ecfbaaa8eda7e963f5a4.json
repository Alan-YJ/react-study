{"ast":null,"code":"var _jsxFileName = \"/home/yijing/Documents/react-study/frontend-react/src/components/Upload.tsx\";\nimport * as React from 'react';\nimport axios from 'axios';\nimport './Upload.scss';\nconst CancelToken = axios.CancelToken;\nlet source = CancelToken.source();\nexport const ImageExtends = ['png', 'img', 'gif', 'bmp', 'svg', 'webp', \"mp4\"];\n\nconst Upload = props => {\n  let [urls, setUrls] = React.useState([]);\n  let [files, setFiles] = React.useState([]);\n  let [progress, setProgress] = React.useState(0.0);\n  let [source, setSource] = React.useState();\n  const config = {\n    onUploadProgress(progress) {\n      if (progress.lengthComputable) {\n        let percent = progress.loaded / progress.total * 100;\n        setProgress(percent);\n      }\n    }\n\n  };\n\n  const cancelUpload = () => {\n    cancel();\n  };\n\n  const changeFiles = e => {\n    if (e.currentTarget.files && e.currentTarget.files.length > 0) {\n      setSource(axios.CancelToken.source());\n      let filelist = [];\n\n      for (let i = 0; i < e.currentTarget.files.length; i++) {\n        let extend = e.currentTarget.files[i].name.substring(e.currentTarget.files[i].name.lastIndexOf('.') + 1);\n        let item = {\n          name: e.currentTarget.files[i].name,\n          size: e.currentTarget.files[i].size,\n          type: extend,\n          canPreview: ImageExtends.includes(extend),\n          src: '',\n          progress: 0,\n          content: e.currentTarget.files[i],\n          loaded: false,\n          index: i\n        };\n\n        if (ImageExtends.includes(extend)) {\n          let reader = new FileReader();\n          reader.readAsDataURL(e.currentTarget.files[i]);\n\n          reader.onload = () => {\n            let filesTemp = JSON.parse(JSON.stringify(filelist));\n            filesTemp.splice(i, 1, Object.assign(item, {\n              src: reader.result\n            }));\n            setFiles(filesTemp);\n          };\n        }\n\n        filelist.push(item);\n      }\n\n      setFiles(filelist);\n    }\n  };\n\n  const uploadFile = e => {\n    e.preventDefault();\n    let formData = new FormData();\n    const dom = document.getElementById('file');\n    const files = dom.files;\n\n    if (files.length === 0) {\n      return;\n    }\n\n    for (let key = 0; key < files.length; key++) {\n      formData.append(`file[]`, files[key]);\n    }\n\n    axios.post(`http://192.168.45.121:5000/upload`, formData, config).then(res => {\n      if (res.data.status === 'success') {\n        setUrls(res.data.url);\n        dom.value = '';\n        setFiles([]);\n      }\n    }).catch(err => {\n      if (axios.isCancel(err)) {\n        console.info(err);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    action: \"http://192.168.45.121:5000/upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    multiple: true,\n    onChange: changeFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"preview-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, files.map(file => {\n    if (file.canPreview) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"preview-item-wrap\",\n        key: file.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: file.src,\n        className: \"preview-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 41\n        }\n      }), progress > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"danger-btn\",\n        onClick: cancelUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 45\n        }\n      }, \"\\u53D6\\u6D88\") : /*#__PURE__*/React.createElement(React.Fragment, null));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"preview-item-wrap\",\n        key: file.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"preview-item\",\n        key: file.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      }, file.type), progress > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"danger-btn\",\n        onClick: cancelUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 45\n        }\n      }, \"\\u53D6\\u6D88\") : /*#__PURE__*/React.createElement(React.Fragment, null));\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: uploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Upload\")), progress > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, progress.toFixed(0), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-mask\",\n    style: {\n      width: 100 - progress + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), progress === 100 && urls && urls.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, urls.map(url => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: url,\n      style: {\n        color: \"#2486b9\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }\n    }, url));\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/yijing/Documents/react-study/frontend-react/src/components/Upload.tsx"],"names":["React","axios","CancelToken","source","ImageExtends","Upload","props","urls","setUrls","useState","files","setFiles","progress","setProgress","setSource","config","onUploadProgress","lengthComputable","percent","loaded","total","cancelUpload","cancel","changeFiles","e","currentTarget","length","filelist","i","extend","name","substring","lastIndexOf","item","size","type","canPreview","includes","src","content","index","reader","FileReader","readAsDataURL","onload","filesTemp","JSON","parse","stringify","splice","Object","assign","result","push","uploadFile","preventDefault","formData","FormData","dom","document","getElementById","key","append","post","then","res","data","status","url","value","catch","err","isCancel","console","info","map","file","toFixed","width","color","textDecoration"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components'\nimport axios,{ AxiosStatic } from 'axios'\nimport './Upload.scss'\n\nconst CancelToken = axios.CancelToken\nlet source = CancelToken.source();\n\nexport type uploadFiles = {\n    filename: string,\n    size: number,\n}\n\ninterface IUpload {\n    handler?: (file: File) => void;\n    path?: string;\n    files?: uploadFiles[];\n}\n\ninterface IFile{\n    name:string,\n    size:number,\n    type:string,\n    canPreview:boolean,\n    progress:number\n}\n\nexport const ImageExtends = ['png' , 'img' , 'gif' , 'bmp' , 'svg' , 'webp', \"mp4\" ]\n\nconst Upload:React.FC<IUpload> = (props)=>{\n    let [urls,setUrls] = React.useState([])\n    let [files,setFiles]:any = React.useState([])\n    let [progress,setProgress] = React.useState(0.0)\n    let [source,setSource] = React.useState<any>()\n    const config = {\n        onUploadProgress(progress:ProgressEvent){\n            if(progress.lengthComputable){\n                let percent:number = progress.loaded / progress.total*100\n                setProgress(percent)\n            }\n        }\n    }\n\n    const cancelUpload = ()=>{\n        cancel()\n    }\n\n    const changeFiles = (e:React.FormEvent<HTMLInputElement>)=>{\n        if(e.currentTarget.files && e.currentTarget.files.length>0){\n            setSource(axios.CancelToken.source())\n            let filelist:Array<any> = []\n            for(let i=0;i<e.currentTarget.files.length;i++){\n                let extend = e.currentTarget.files[i].name.substring(e.currentTarget.files[i].name.lastIndexOf('.')+1)\n                let item = {\n                    name:e.currentTarget.files[i].name,\n                    size:e.currentTarget.files[i].size,\n                    type:extend,\n                    canPreview:ImageExtends.includes(extend),\n                    src:'',\n                    progress:0,\n                    content:e.currentTarget.files[i],\n                    loaded:false,\n                    index:i,\n                }\n                if(ImageExtends.includes(extend)){\n                    let reader = new FileReader()\n                    reader.readAsDataURL(e.currentTarget.files[i])\n                    reader.onload = ()=>{\n                        let filesTemp = JSON.parse(JSON.stringify(filelist))\n                        filesTemp.splice(i,1,Object.assign(item,{\n                            src:reader.result\n                        }))\n                        setFiles(filesTemp)\n                    }\n                }\n                filelist.push(item)\n            }\n            setFiles(filelist)\n        }\n    }\n\n    const uploadFile = (e:any)=>{\n        e.preventDefault();\n        let formData = new FormData()\n        const dom = document.getElementById('file') as HTMLInputElement \n        const files = dom.files as FileList\n        if(files.length===0){\n            return \n        }\n        for(let key = 0;key<files.length;key++){\n            formData.append(`file[]`,files[key])\n        }\n        axios.post(`http://192.168.45.121:5000/upload`,formData,config).then(res=>{\n            if(res.data.status==='success'){\n                setUrls(res.data.url)\n                dom.value = ''\n                setFiles([])\n            }\n        }).catch(err=>{\n            if(axios.isCancel(err)){\n                console.info(err)\n            }\n        })\n    }\n    return (\n        <>\n            <form method='post' action='http://192.168.45.121:5000/upload' >\n                <div>\n                    <input type=\"file\" id='file' multiple onChange={changeFiles}/>\n                </div>\n                <div className='preview-wrap'>\n                    {\n                        files.map((file)=>{\n                            if(file.canPreview){\n                                return (\n                                    <div className='preview-item-wrap' key={file.index}>\n                                        <img src={file.src}  className=\"preview-item\"/>\n                                        {progress>0?\n                                            <button className='danger-btn' onClick={cancelUpload}>取消</button>:\n                                            <></>\n                                        }\n                                    </div>\n                                )\n                            }else{\n                                return (\n                                    <div className='preview-item-wrap' key={file.index}>\n                                        <div className='preview-item' key={file.index}>{file.type}</div>\n                                        {progress>0?\n                                            <button className='danger-btn' onClick={cancelUpload}>取消</button>:\n                                            <></>\n                                        }\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                </div>\n                <div>\n                    <button type='submit' onClick={uploadFile} >Upload</button>\n                </div>\n                {\n                    progress>0?\n                    (\n                        <>\n                            <div className='progress-wrap'>\n                                <div className='progress-num'>{progress.toFixed(0)}%</div>\n                                <div className='progress-bar'></div>\n                                <div className='progress-mask' style={{width:(100-progress)+'%'}}></div>\n                            </div>\n                        </>\n                    ) :<></>\n                }\n                {\n                    progress===100 && urls && urls.length>0?\n                    (\n                        <ul>\n                            {\n                                urls.map(url=>{\n                                    return <li key={url}>\n                                        <a href={url} style={{color:\"#2486b9\",textDecoration:\"none\"}}>\n                                            { url }\n                                        </a>\n                                    </li>\n                                })\n                            }\n                        </ul>\n                    ):\n                    (\n                        <></>\n                    )\n                }\n            </form>\n        </>\n    )\n}\n\nexport default Upload\n\n\n"]},"metadata":{},"sourceType":"module"}